{"version":3,"sources":["webpack://nanocolor/webpack/universalModuleDefinition","webpack://nanocolor/webpack/bootstrap","webpack://nanocolor/./src/transforms.js","webpack://nanocolor/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rgb2hsl","rgb","h","g","b","min","Math","max","hue2rgb","q","hsl2rgb","hsl","colorRegex","isValid","hex","test","processChannel","channel","sign","factor","this","_hsl","toNanocolor","Nanocolor","color","hexOrInstance","assign","substr","length","split","map","join","parseInt","amount","isDark","round","other","toString","equals","makeComparable","getHSL","getRGB","floor","padStart","random","hue","randomHex","randomChannel","gradient","from","to","steps","stepsPerChannel","result","getChannelValue","entry","clone","push","sort","array","a","compare"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,YAAa,GAAIH,GACE,iBAAZC,QACdA,QAAmB,UAAID,IAEvBD,EAAgB,UAAIC,IARtB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,+DClF9C,SAASC,EAAQC,GACpB,IAMIC,EAAGH,EANDjB,EAAImB,EAAInB,EAAI,IACZqB,EAAIF,EAAIE,EAAI,IACZC,EAAIH,EAAIG,EAAI,IAEZC,EAAMC,KAAKD,IAAIvB,EAAGqB,EAAGC,GACrBG,EAAMD,KAAKC,IAAIzB,EAAGqB,EAAGC,GAErBnC,GAAKoC,EAAME,GAAO,EAExB,GAAIF,IAAQE,EACRL,EAAIH,EAAI,MAEP,CACD,IAAMzB,EAAIiC,EAAMF,EAGhB,OAFAN,EAAI9B,EAAI,GAAMK,GAAK,EAAIiC,EAAMF,GAAO/B,GAAK+B,EAAME,GAEvCA,GACJ,KAAKzB,EAAGoB,GAAKC,EAAIC,GAAK9B,GAAK6B,EAAIC,EAAI,EAAI,GAAI,MAC3C,KAAKD,EAAGD,GAAKE,EAAItB,GAAKR,EAAI,EAAG,MAC7B,KAAK8B,EAAGF,GAAKpB,EAAIqB,GAAK7B,EAAI,EAE9B4B,GAAK,EAET,MAAO,CAAEA,EAAO,IAAJA,EAASH,EAAO,IAAJA,EAAS9B,EAAO,IAAJA,GAGxC,SAASuC,EAAQV,EAAGW,EAAGvB,GAOnB,OANIA,EAAI,EACJA,GAAK,EAEAA,EAAI,IACTA,GAAK,GAELA,EAAI,EAAI,EACDY,EAAc,GAATW,EAAIX,GAASZ,EAEzBA,EAAI,GACGuB,EAEPvB,EAAI,EAAI,EACDY,GAAKW,EAAIX,IAAM,EAAI,EAAIZ,GAAK,EAEhCY,EAGJ,SAASY,EAAQC,GACpB,IAAI7B,EAAGqB,EAAGC,EACJF,EAAIS,EAAIT,EAAI,IACZH,EAAIY,EAAIZ,EAAI,IACZ9B,EAAI0C,EAAI1C,EAAI,IAClB,GAAc,IAAV0C,EAAIZ,EACJjB,EAAIqB,EAAIC,EAAInC,MAEX,CACD,IAAMwC,EAAIxC,EAAI,GAAMA,GAAK,EAAI8B,GAAK9B,EAAI8B,EAAI9B,EAAI8B,EACxCD,EAAI,EAAI7B,EAAIwC,EAClB3B,EAAI0B,EAAQV,EAAGW,EAAGP,EAAK,EAAI,GAC3BC,EAAIK,EAAQV,EAAGW,EAAGP,GAClBE,EAAII,EAAQV,EAAGW,EAAGP,EAAK,EAAI,GAE/B,MAAO,CAAEpB,EAAO,IAAJA,EAASqB,EAAO,IAAJA,EAASC,EAAO,IAAJA,G,6KC3DxC,IAAMQ,EAAa,mCAEnB,SAASC,EAAQC,GACb,OAAOF,EAAWG,KAAKD,GAG3B,SAASE,EAAeC,EAASC,GAAmB,IAAbC,EAAa,uDAAJ,GAE5C,OAAe,KADfA,EAASb,KAAKC,IAAI,EAAGD,KAAKD,IAAI,IAAKc,KAExBC,MAEXA,KAAKC,KAAKJ,GAAWX,KAAKD,IAAI,IAAKe,KAAKC,KAAKJ,IAAY,EAAIC,EAAOC,EAAS,MACtEC,MAGX,SAASE,EAAYrC,GACjB,OAAOA,aAAiBsC,EAAYtC,EAAQ,IAAIsC,EAAUtC,G,IAIxDsC,E,WACF,aAAgC,ID0C5BC,EC1CQC,EAAoB,uDAAJ,I,4FAAI,SACxBA,aAAyBF,EACzBH,KAAKC,KAAO3C,OAAOgD,OAAO,GAAKD,EAAcJ,OAGxCR,EAAQY,KACTA,EAAgB,QAEpBL,KAAKC,KAAOrB,GDmCC,KADjBwB,EClCgCC,EDkCpBE,OAAO,IACbC,SACNJ,EAAQA,EAAMK,MAAM,IAAIC,KAAI,SAAAhC,GAAC,OAAIA,EAAIA,KAAGiC,KAAK,KAG1C,CAAEjD,GADT0C,EAAQQ,SAASR,EAAO,MACH,GAAK,IAAMrB,EAAGqB,GAAS,EAAI,IAAMpB,EAAW,IAARoB,M,2DCjCrD,OADAJ,KAAKC,KAAKtB,EAAI,EACPqB,O,+BAIP,IAAMnB,EAAMS,EAAQU,KAAKC,MAKzB,OAJApB,EAAInB,EAAI,IAAMmB,EAAInB,EAClBmB,EAAIE,EAAI,IAAMF,EAAIE,EAClBF,EAAIG,EAAI,IAAMH,EAAIG,EAClBgB,KAAKC,KAAOrB,EAAQC,GACbmB,O,6BAGJD,GACH,OAAOH,EAAe7C,KAAKiD,KAAM,KAAM,EAAGD,K,8BAGtCA,GACJ,OAAOH,EAAe7C,KAAKiD,KAAM,IAAK,EAAGD,K,+BAGpCA,GACL,OAAOH,EAAe7C,KAAKiD,KAAM,IAAK,EAAGD,K,iCAGlCA,GACP,OAAOH,EAAe7C,KAAKiD,KAAM,KAAM,EAAGD,K,4BAGxCc,GAKF,OAJAb,KAAKC,KAAKnB,GAAKkB,KAAKC,KAAKnB,EAAI+B,GAAU,IACnCb,KAAKC,KAAKnB,EAAI,IACdkB,KAAKC,KAAKnB,GAAK,KAEZkB,O,+BAIP,OAAOA,KAAKC,KAAKpD,EAAI,K,gCAIrB,OAAQmD,KAAKc,W,+BAIb,IAAMvB,EAAMS,KAAKC,KACjB,MAAO,CAAEnB,EAAGI,KAAK6B,MAAMxB,EAAIT,GAAIH,EAAGO,KAAK6B,MAAMxB,EAAIZ,GAAI9B,EAAGqC,KAAK6B,MAAMxB,EAAI1C,M,+BAIvE,IAAMgC,EAAMS,EAAQU,KAAKC,MACzB,MAAO,CAAEvC,EAAGwB,KAAK6B,MAAMlC,EAAInB,GAAIqB,EAAGG,KAAK6B,MAAMlC,EAAIE,GAAIC,EAAGE,KAAK6B,MAAMlC,EAAIG,M,6BAGpEgC,GAIH,MAHqB,iBAAVA,IACPA,EAAQ,IAAIb,EAAUa,IAEtBA,aAAiBb,GACVH,KAAKiB,aAAeD,EAAMC,a,8BAKjCD,GAEJ,GADAA,EAAQd,EAAYc,GAChBhB,KAAKkB,OAAOF,GACZ,OAAO,EAEX,IAAMG,EAAiB,SAAA5B,GAAG,OAAY,IAARA,EAAIT,EAAkB,IAARS,EAAI1C,EAAU0C,EAAIZ,GAC9D,OAAOO,KAAKY,KAAKqB,EAAenB,KAAKoB,UAAYD,EAAeH,EAAMI,a,8BAItE,OAAO,IAAIjB,EAAUH,KAAKiB,c,iCAI1B,OD1CgBpC,EC0CDmB,KAAKqB,SDxCjB,IADOnC,KAAKoC,OAAOzC,EAAInB,GAAK,KAAOmB,EAAIE,GAAK,GAAKF,EAAIG,GACzCiC,SAAS,IAAIM,SAAS,EAAG,KAFzC,IAAiB1C,I,gCC8ChB,OAAOmB,KAAKiB,gB,gCAIpB,SAAS9E,EAAQuD,GACb,OAAO,IAAIS,EAAUT,GAGzBvD,EAAQqF,OAAS,WAAoB,IAAXC,EAAW,uDAAL,KAC5B,GAAY,OAARA,EAAc,CACd,IAAMC,EAAY,IAAMxC,KAAKoC,MAAsB,SAAhBpC,KAAKsC,UAAqBP,SAAS,IACtE,OAAO,IAAId,EAAUuB,GAGzB,IAAMC,EAAgB,kBAAMzC,KAAKoC,MAAsB,IAAhBpC,KAAKsC,WACtCpB,EAAQ,IAAID,EAMlB,OALAC,EAAMH,KAAO,CACTnB,EAAGI,KAAKD,IAAI,IAAKC,KAAKC,IAAI,EAAGsC,IAC7B9C,EAAGgD,IACH9E,EAAG8E,KAEAvB,GAGXjE,EAAQyF,SAAW,SAASC,EAAMC,GAAc,IAAVC,EAAU,uDAAF,EAC1CF,EAAO3B,EAAY2B,GACnBC,EAAK5B,EAAY4B,GACjBC,EAAQ7C,KAAKC,IAAI,EAAG4C,GAWpB,IATA,IAAMC,EAAkB,CACpBlD,GAAIgD,EAAG7B,KAAKnB,EAAI+C,EAAK5B,KAAKnB,GAAKiD,EAC/BpD,GAAImD,EAAG7B,KAAKtB,EAAIkD,EAAK5B,KAAKtB,GAAKoD,EAC/BlF,GAAIiF,EAAG7B,KAAKpD,EAAIgF,EAAK5B,KAAKpD,GAAKkF,GAG7BE,EAAS,CAACJ,GACVK,EAAkB,SAACrC,EAASjD,GAAV,OAAgBiF,EAAK5B,KAAKJ,GAAWX,KAAK6B,MAAMnE,EAAIoF,EAAgBnC,KAEnFjD,EAAI,EAAGA,EAAImF,EAAQ,IAAKnF,EAAG,CAChC,IAAMuF,EAAQN,EAAKO,QACnBD,EAAMlC,KAAKnB,EAAIoD,EAAgB,IAAKtF,GACpCuF,EAAMlC,KAAKtB,EAAIuD,EAAgB,IAAKtF,GACpCuF,EAAMlC,KAAKpD,EAAIqF,EAAgB,IAAKtF,GACpCqF,EAAOI,KAAKF,GAIhB,OADAF,EAAOI,KAAKP,GACLG,GAGX9F,EAAQmG,KAAO,SAASC,GAEpB,OADAA,EAAQA,EAAM7B,IAAIR,IACLoC,MAAK,SAACE,EAAGxD,GAAJ,OAAUwD,EAAEC,QAAQzD,OAG1C7C,EAAQsD,QAAUA,EAEHtD","file":"nanocolor.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"nanocolor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nanocolor\"] = factory();\n\telse\n\t\troot[\"nanocolor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export function rgb2hsl(rgb) {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    let h, s;\n    const l = (min + max) / 2;\n\n    if (min === max) {\n        h = s = 0;\n    }\n    else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (min + max);\n\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h * 360, s: s * 100, l: l * 100 };\n}\n\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    else if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nexport function hsl2rgb(hsl) {\n    let r, g, b;\n    const h = hsl.h / 360;\n    const s = hsl.s / 100;\n    const l = hsl.l / 100;\n    if (hsl.s === 0) {\n        r = g = b = l;\n    }\n    else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        r = hue2rgb(p, q, h + (1 / 3));\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - (1 / 3));\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\nexport function hex2rgb(hex) {\n    let color = hex.substr(1);\n    if (color.length === 3) {\n        color = color.split('').map(p => p + p).join('');\n    }\n    color = parseInt(color, 16);\n    return { r: color >> 16 & 0xff, g: color >> 8 & 0xff, b: color & 0xff };\n}\n\nexport function rgb2hex(rgb) {\n    const color = Math.floor((rgb.r << 16) + (rgb.g << 8) + rgb.b);\n    return '#' + color.toString(16).padStart(6, '0');\n}","import { rgb2hsl, hsl2rgb, hex2rgb, rgb2hex } from '@/transforms';\n\nconst colorRegex = /^#([A-Fa-f\\d]{3}|[A-Fa-f\\d]{6})$/;\n\nfunction isValid(hex) {\n    return colorRegex.test(hex);\n}\n\nfunction processChannel(channel, sign, factor = 30) {\n    factor = Math.max(0, Math.min(100, factor));\n    if (factor === 0) {\n        return this;\n    }\n    this._hsl[channel] = Math.min(100, this._hsl[channel] * (1 + sign * factor / 100));\n    return this;\n}\n\nfunction toNanocolor(value) {\n    return value instanceof Nanocolor ? value : new Nanocolor(value); // eslint-disable-line\n}\n\n\nclass Nanocolor {\n    constructor(hexOrInstance = '') {\n        if (hexOrInstance instanceof Nanocolor) {\n            this._hsl = Object.assign({ }, hexOrInstance._hsl);\n        }\n        else {\n            if (!isValid(hexOrInstance)) {\n                hexOrInstance = '#000';\n            }\n            this._hsl = rgb2hsl(hex2rgb(hexOrInstance));\n        }\n    }\n\n    grayscale() {\n        this._hsl.s = 0;\n        return this;\n    }\n\n    invert() {\n        const rgb = hsl2rgb(this._hsl);\n        rgb.r = 255 - rgb.r;\n        rgb.g = 255 - rgb.g;\n        rgb.b = 255 - rgb.b;\n        this._hsl = rgb2hsl(rgb);\n        return this;\n    }\n\n    darken(factor) {\n        return processChannel.call(this, 'l', -1, factor);\n    }\n\n    lighten(factor) {\n        return processChannel.call(this, 'l', 1, factor);\n    }\n\n    saturate(factor) {\n        return processChannel.call(this, 's', 1, factor);\n    }\n\n    desaturate(factor) {\n        return processChannel.call(this, 's', -1, factor);\n    }\n\n    shift(amount) {\n        this._hsl.h = (this._hsl.h + amount) % 360;\n        if (this._hsl.h < 0) {\n            this._hsl.h += 360;\n        }\n        return this;\n    }\n\n    isDark() {\n        return this._hsl.l < 50;\n    }\n\n    isLight() {\n        return !this.isDark();\n    }\n\n    getHSL() {\n        const hsl = this._hsl;\n        return { h: Math.round(hsl.h), s: Math.round(hsl.s), l: Math.round(hsl.l) };\n    }\n\n    getRGB() {\n        const rgb = hsl2rgb(this._hsl);\n        return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\n    }\n\n    equals(other) {\n        if (typeof other === 'string') {\n            other = new Nanocolor(other);\n        }\n        if (other instanceof Nanocolor) {\n            return this.toString() === other.toString();\n        }\n        return false;\n    }\n\n    compare(other) {\n        other = toNanocolor(other);\n        if (this.equals(other)) {\n            return 0;\n        }\n        const makeComparable = hsl => hsl.h * 1e6 + hsl.l * 1e3 + hsl.s;\n        return Math.sign(makeComparable(this.getHSL()) - makeComparable(other.getHSL()));\n    }\n\n    clone() {\n        return new Nanocolor(this.toString());\n    }\n\n    toString() {\n        return rgb2hex(this.getRGB());\n    }\n\n    valueOf() {\n        return this.toString();\n    }\n}\n\nfunction factory(hex) {\n    return new Nanocolor(hex);\n}\n\nfactory.random = function(hue = null){\n    if (hue === null) {\n        const randomHex = '#' + Math.floor(Math.random() * 16777215).toString(16);\n        return new Nanocolor(randomHex);\n    }\n\n    const randomChannel = () => Math.floor(Math.random() * 101);\n    const color = new Nanocolor();\n    color._hsl = {\n        h: Math.min(360, Math.max(0, hue)),\n        s: randomChannel(),\n        l: randomChannel()\n    };\n    return color;\n};\n\nfactory.gradient = function(from, to, steps = 2){\n    from = toNanocolor(from);\n    to = toNanocolor(to);\n    steps = Math.max(2, steps);\n    \n    const stepsPerChannel = {\n        h: (to._hsl.h - from._hsl.h) / steps,\n        s: (to._hsl.s - from._hsl.s) / steps,\n        l: (to._hsl.l - from._hsl.l) / steps\n    };\n\n    const result = [from];\n    const getChannelValue = (channel, i) => from._hsl[channel] + Math.round(i * stepsPerChannel[channel]);\n\n    for (let i = 1; i < steps - 1; ++i) {\n        const entry = from.clone();\n        entry._hsl.h = getChannelValue('h', i);\n        entry._hsl.s = getChannelValue('s', i);\n        entry._hsl.l = getChannelValue('l', i);\n        result.push(entry);\n    }\n\n    result.push(to);\n    return result;\n};\n\nfactory.sort = function(array){\n    array = array.map(toNanocolor);\n    return array.sort((a, b) => a.compare(b));\n};\n\nfactory.isValid = isValid;\n\nexport default factory;"],"sourceRoot":""}